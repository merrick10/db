======================================================================================
Linux下：

python安装(比如3.6版)需要root权限;

apache2的安装(源码编译版),make install需要root权限,configure和make不需要root权限;

-----------------------------------------------------------------------------------
CentOS(5)自带的apache2.2.3，
默认启动，占用80端口,

[停止]：
进入/usr/sbin/目录，使用命令‘sudo ./httpd -k stop’停止apache服务器；

[查询]：rpm -qa|grep httpd

[删除]: rpm -e httpd-2.2.3-**可能失败，
1，存在依赖逐一删除依赖，或者加参数‘--nodeps’,
2，报错：“%preun(httpd-2.2.3-43.el5.centos.i386) scriptlet failed”，
采用rpm -e httpd --noscripts进行卸载。（其他卸载参数：--nopreun）
删除系统自带的mysql同样可以用上述类似命令进行。
----------------------------------------------------------------------
【MySQL数据库5.7免安装版Linux下(CentOS5.5)安装及初始化】

[mysql数据库的配置]：
主目录建立my.cnf(可复制support-files目录下的配置再修改)，属性内容如下：
basedir =/home/merrick/czjcc/mysql/
datadir =/home/merrick/czjcc/mysql/data/
port =13306
socket =/home/merrick/czjcc/mysql/socket/mysql.sock
pid-file=/home/merrick/czjcc/mysql/pid/mysql.pid
log-error=/home/merrick/czjcc/mysql/logs/mysql.log
user=merrick
sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES 


[mysql数据库的初始化]：
建立文件夹：/home/merrick/czjcc/mysql/logs/和/home/merrick/czjcc/mysql/pid/
进入mysql主目录，确保datadir参数对应目录下为空，执行：
bin/mysqld --initialize  --basedir=/home/merrick/czjcc/mysql/ --datadir=/home/merrick/czjcc/mysql/data/
对于mysql5.7的初始化，会在屏幕上显示随机产生的初始密码，比如：“A temporary password is generated for root@localhost: tlsfUT1Cse;h”
															


[命令启动mysql]：
bin/mysqld_safe --defaults-file=my.cnf &

[命令行访问mysql]：
(必需是当前用户，当前session)
bin/mysql -h127.0.0.1 -P13306 -uroot -pxxxxxx

[修改mysql初始root密码]：
alter user root@localhost identified by 'pswpsw';


[添加远程用户]：
create user 'jcc'@'192.168.245.1' identified by '123456';

[授权远程用户所有权限]：
GRANT ALL ON *.* TO 'jcc'@'192.168.245.1';

[导入外部sql脚本文件]：
(注意必须是127.0.0.1，是localhost还会报错)
bin/mysql -h127.0.0.1 -P13306 -uroot -p123456 < /home/merrick/czjcc/scripts/jpcorps_1_win32.sql


[安装为系统服务](需要root用户)：
1，复制服务启动脚本：$ sudo cp support-files/mysql.server /etc/init.d/mysql
2，复制配置文件：# cp /home/merrick/czjcc/mysql/my.cnf /etc/my.cnf
3，启动服务：# service mysql start
4，查看服务情况：# netstat -tlunp|grep mysql
5,设置开机自启动：# chkconfig --add mysql
6,设置各模式启动开关：#chkconfig --level 345 mysql on

注意：/etc/init.d/mysql文件配置的自动启动和停止优先级为64和36：
# chkconfig: 2345 64 36

---------------------------------------------------------------------------------------------------

[Linux下安装jdk(仅单一用户)]：
1，解压jdk-7u71-linux-i586.tar.gz：
	$ jdk-7u71-linux-i586.tar.gz
2，改名：
	$ mv jdk-7u71-linux-i586 jdk
3，设定本用户环境变量，修改~/.bash_profile：
	PATH=$PATH:$HOME
	export JAVA_HOME=/home/merrick/jdk
	export JRE_HOME=$JAVA_HOME/jre
	export PATH=$JAVA_HOME/bin:$PATH
4，环境变量生效：
	$ source .bash_profile

----------------------------------------------------------------------------------------------------
[Linux下(CentOS5.5)tomcat7(免安装版)的安装](已设定好上述步骤的JDK环境变量)：
1，解压apache-tomcat-7.0.68.tar.gz到用户主目录：
	$ tar xvf apache-tomcat-7.0.68.tar.gz
2，改名
	$ mv apache-tomcat-7.0.68 tomcat7
3，启动：
	$  bin/startup.sh

[安装为系统服务](需要系统root用户操作，守护进程脚本程序交系统服务执行)
1，把$TOMCAT_HOME/bin/commons-daemon-native.tar.gz解压
	$ tar xvf commons-daemon-native.tar.gz

2，进入$TOMCAT_HOME/bin/commons-daemon-1.0.15-native-src/unix/ ，执行配置和编译
	$ cd commons-daemon-1.0.15-native-src/unix/
 	$ ./configure --with-java=$JAVA_HOME
 	$ make

 	注(ubuntu下安装gcc/g++)：
 	1 apt-get install gcc 
	2 apt-get install build-essential

3，复制编译好的jsvc到“${CATALINA_BASE}/bin/” 目录下；

4，修改$TOMCAT_HOME/bin/daemon.sh，添加JDK环境变量(虽然已设置JDK系统环境变量，这里还是要设置)，修改用户：
	JAVA_HOME=/home/merrick/czjcc/jdk
	test ".$TOMCAT_USER" = . && TOMCAT_USER=merrick


5，建立软链接到系统服务管理项:
	# ln -s $TOMCAT_HOME/bin/daemon.sh /etc/init.d/tomcat
	或者# cp $TOMCAT_HOME/bin/daemon.sh /etc/init.d/tomcat，但是这样需要修改tomcat主目录环境变量：test “.$CATALINA_HOME” = . && CATALINA_HOME=”/home/merrick/czjcc/tomcat”

6，把tomcat加入chkconfig系统管理并随系统启动而启动服务，
	还需要在$TOMCAT_HOME/bin/daemon.sh开头添加两行注释内容(考虑到tomcat需要在mysql之后启动，所以优先级设的低一些，数字越大优先级越低，启动和关闭都是90)：
	# chkconfig: 2345 90 90
	# description: Tomcat7 daemon

7，加入chkconfig系统服务管理，以便系统启动时tomcat自动启动服务：
	# chkconfig --add tomcat

8，管理tomcat服务：
	查看: # chkconfig --list|grep tomcat
	启动：# service tomcat start
	关闭：# service tomcat stop

9，为安全起见使tomcat始终运行于普通用户，改变一下tomcat目录的属主：
	chown -R user:usergroup /home/merrick/czjcc/tomcat/


注：80端口还是需要root用户启动,可以使用iptalbes的端口转发(80转8080)实现80端口服务

------------------------------------------------------------------------------------------------------------	
	


---------------------------------------------------------------------------------------------------------

linux下一次性建立多层不存在的目录：
$ mkdir -p /home/xxx/1/2/3/4
-------------------------------------------------------------------------------------------------------------
linux下解压.war文件：
# unzip -oq common.war -d common
unzip -d 指定目录
-------------------------------------------------------------------------------------------------------------

本webapp在linux下安装配置涉及的内容(手动安装配置，参考windows下的自动安装过程脚本)：


一，建立web应用的目录结构(普通用户操作)
1，建立目录：
	$HOME/czjcc/
	$HOME/czjcc/
	$HOME/czjcc/log/
	$HOME/cjzcc/userdata/articlepicfolder/
	$HOME/cjzcc/userdata/compicturefolder/
	$HOME/cjzcc/userdata/emailattachfolder/
	$HOME/cjzcc/userdata/mbfolder/

二，安装mysql(绿色版)(普通用户操作)，mysql初始化，并配置为系统服务和自启动(root用户操作)
1，复制mysql到$HOME目录，进入$HOME目录，解压文件到$HOME/czjcc/，并改目录名
	$ cd
	$ tar xvf mysql-5.7.14-linux-glibc2.5-i686.tar.gz -C $HOME/czjcc/
	$ mv $HOME/czjcc/mysql-5.7.14-linux-glibc2.5-i686/ $HOME/czjcc/mysql/

2，建立my.cnf文件($HOME/czjcc/mysql/my.cnf)(均为绝对路径,merrick为安装用户)，内容如下：(**打包后也要做的步骤，脚本中需要替换实际内容)
	[mysqld]
	basedir =/home/merrick/czjcc/mysql/
	datadir =/home/merrick/czjcc/mysql/data/
	port =13306
	socket =/home/merrick/czjcc/mysql/socket/mysql.sock
	pid-file=/home/merrick/czjcc/mysql/pid/mysql.pid
	log-error=/home/merrick/czjcc/mysql/logs/mysql.log
	user=merrick
	sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES

3，数据库初始化及配置：
		进入mysql主目录，确保datadir参数对应目录下为空，
	a,[首先建立以上配置对应目录]：		
		/home/merrick/czjcc/mysql/socket/，/home/merrick/czjcc/mysql/pid/，/home/merrick/czjcc/mysql/logs/

	b,[执行初始化动作]：
		$ cd $HOME/czjcc/mysql
		$ bin/mysqld --initialize  --basedir=/home/merrick/czjcc/mysql/ --datadir=/home/merrick/czjcc/mysql/data/

		对于mysql5.7的初始化，会在屏幕上显示随机产生的初始密码，比如：“A temporary password is generated for root@localhost: tlsfUT1Cse;h”

		注意：如果出现mysql报错：error while loading shared libraries: libaio.so.1: cannot open shared object file: No such file or directory，则需要安装缺少的库文件：
			Ubuntu下：
			apt-get install libaio1 libaio-dev
			Redhat/Fedora/CentOS:				
			yum install libaio


	c,[命令行启动]
		(停止可以kill对应活动线程)
		$ cd $HOME/czjcc/mysql/
		$ bin/mysqld_safe --defaults-file=my.cnf &

	d,[命令行访问mysql]：
		(必需是当前用户，地址必需是127.0.0.1，不能是localhost，当前session)
		$ bin/mysql -h127.0.0.1 -P13306 -uroot -pxxxxxx

		[修改mysql初始root密码]：
		alter user root@localhost identified by 'pswpsw';

	e,[给app使用的用户需要添加并库授权(app在本地，和数据同一机器)]：
		mysql> create user 'czjcc'@'localhost' identified by '123456';
		mysql> grant all on *.* to 'czjcc'@'localhost';

	f,[导入外部sql脚本文件]：
		(注意必须是127.0.0.1，是localhost还会报错)
		$ bin/mysql -h127.0.0.1 -P13306 -uroot -p123456 < /home/merrick/czjcc/scripts/jpcorps_1_win32.sql

	g,[配置为系统服务，并设定为开机启动]：
		复制配置文件和系统服务启停脚本：(**打包后，自动脚本也要做的步骤)
		# cp /home/merrick/czjcc/mysql/my.cnf /etc/my.cnf
		# cp /home/merrick/czjcc/mysql/support-files/mysql.server /etc/init.d/mysql
		这样就可以用命令启停mysql：
			启动：$ service mysql start
			停止：$ service mysql stop			

		设置开机启动(适用CentOS，Ubuntu不同，另行设置，或者按照chkconfig)：
			# chkconfig --add mysql
			# chkconfig --level 345 mysql on

		注意：/etc/init.d/mysql文件配置的自动启动和停止优先级为64和36,对应行：
			# chkconfig: 2345 64 36

	h,[小结]
		实际程序包解压后，由于用户名的不同，仍需要修改数据目录有关的配置项的文件，并执行初始化的动作；


三，安装JDK(绿色版)
	1，复制jdk压缩包到$HOME目录，进入$HOME目录，解压文件到$HOME/czjcc/，并改目录名：
		$ cd 
		$ tar xvf jdk-7u71-linux-i586.tar.gz -C $HOME/czjcc/
		$ mv $HOME/czjcc/jdk-7u71-linux-i586/ $HOME/czjcc/jdk/

	2，修改本普通用户环境变量并生效：(**打包后，自动脚本也要做的步骤)
		$ vi $HOME/.bash_profile
		自定义部分内容：
		PATH =$PATH:$HOME
		export JAVA_HOME=$HOME/czjcc/jdk/
		export JRE_HOME=$JAVA_HOME/jre/
		export PATH=$JAVA_HOME/bin:$PATH
		生效:
		$ source .bash_profile


四，安装tomcat，并配置为系统服务和自启动
	1，复制tomcat压缩包到$HOME目录，进入$HOME目录，解压文件到$HOME/czjcc/，并改目录名
		$ cd
		$ tar xvf apache-tomcat-7.0.68.tar.gz -C $HOME/czjcc/
		$ mv $HOME/czjcc/apache-tomcat-7.0.68/  $HOME/czjcc/tomcat/

	2，tomcat系统服务端口默认8080，linux禁止普通用户启动80端口服务，为实现外部访问80端口服务：
		通过Iptables端口实现80到8080的转发，命令为(貌似重启后失效)：
		# iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8080
		(为保证重启后有效，加入服务、自启动,redhat系列有效)：
		# service iptables save
		# chkconfig iptables on
		(非redhat)
		# iptables-save > /etc/sysconfig/iptables
		# iptables-restore < /etc/sysconfig/iptablse
		查看状态：
		# more /etc/sysconfig/iptables 或者 # iptables-save


	3，设置tomcat为普通用户运行，并设置为系统服务：(**打包后，自动脚本也要做的步骤)
		生成守护程序jsvc，这部分仍要手动进行；
		$ cd $HOME/czjcc/tomcat/bin/
		$ tar xf ./commons-daemon-native.tar.gz
		$ cd commons-daemon-1.0.15-native-src/unix/
		$ ./configure
		$ make

		注意：此处如果没有安装gcc、g++编译器，需要先安装gcc：
		$ sudo apt-get install gcc
		$ sudo apt-get install build-essential

		复制服务守护程序jsvc至tomcat的bin目录：
		$ cp ./jsvc $HOME/czjcc/tomcat/bin/
		$ vi $TOMCAT_HOME/bin/daemon.sh
		在此脚本中设置TOMCAT_USER和JAVA_HOME环境变量保存：
		test ".$TOMCAT_USER" = . && TOMCAT_USER=merrick		
		JAVA_HOME=/home/merrick/czjcc/jdk

		建立文件链接到系统服务目录：
		$ sudo ln -s /home/merrick/czjcc/tomcat/bin/daemon.sh /etc/init.d/tomcat

		这样就能以service启停tomcat：
		$ service tomcat start
		$ service tomcat stop


五，解压应用.war文件(**打包后，自动脚本也要做的步骤)
	建立webapp文件存放的目录：
	$ mkdir -p $HOME/czjcc/app/
	解压文件
	$ unzip -oq czjcc.war -d $HOME/czjcc/app/


六，修改应用相关配置文件(**打包后，自动脚本也要做的步骤)
	1，修改tomcat的应用部署位置相关的配置：
		$ vi $TOMCAT_HOME/conf/server.xml
		添加应用webapp的文件夹位置配置，在<Host>标签内添加：
		<Context path="" docBase="/home/merrick/czjcc/app" />

	2，修改hibernate配置的有关数据库的用户名、密码、端口(如不和数据库服务器在同一机器则连接url也要修改):
		 <property name="hibernate.connection.password">123456</property>
		 <property name="hibernate.connection.username">czjcc</property>
		 <property name="hibernate.connection.url">jdbc:mysql://localhost:13306/jpcorps</property>

	3，修改webapp的log4j配置文件的日志路径配置：
		 <param name="File" value="/home/merrick/czjcc/log/log.log" />

	4，修改webapp的有关数据文件存放路径的属性文件配置：
		articlepicfolder=/home/merrick/czjcc/userdata/articlepicfolder
		vipcompicfolder=/home/merrick/czjcc/userdata/compicturefolder
		emailattachsavefolder=/home/merrick/czjcc/userdata/emailattachfolder
		mbfolder=/home/merrick/czjcc/userdata/mbfolder

		注：
			之前没加英文资源，server处理国际化资源时没找到会报错"Can't find bundle for base name resource, locale en_US"，故需要加一下应用的英文国际化资源文件.

	5，修改struts.xml的临时文件路径：
		 <constant name="struts.multipart.saveDir" value="/home/merrick/czjcc"/>


	[注意]
	1，my.cnf中的basedir之类一系列参数只能配置绝对路径，而不能引用环境变量、不能使用相对路径；
	2，mysql经初始化建立系统库后，把所有文件转移至其他路径，修改 $MYSQL_HOME/my.cnf下的有关路径参数配置后，可以启动成功(不再需要再次初始化)；

七，设置mysql和tomcat自启动：
	1，CentOS和redhat前面已提及，采用chkconfig工具；
	2，Ubuntu则采用编辑/etc/rc.local加入shell脚本来实现：以普通用户启动的系统服务。

------------------------------------------------------------------------------------------------------------------------------------------------------------------
常用命令：
	
	[打包命令]
	打包内容会包含绝对路径，不太合适：
	$ tar cjvf ./setup.tar.bz2 /home/merrick/setup_czjcc
	进入对应目录，相对路径，比较常用：
	$ cd /home/merrick/
	$ tar cjvf ./setup.tar.bz2 ./setup_czjcc

	[解压命令]
	$ cd
	$ tar jxvf ./setup.tar.bz2 -C ./

	[为系统添加有效的shell用户]：
	1，假定密码为123456
	2，获取加密后的密码
		# openssl passwd 123456
		# zIdlcW4dSg41s
	3，添加组
		groupadd grp1
	4，添加用户
		# useradd -d /home/test1 -g grp1 -p zIdlcW4dSg41s -m -s /bin/bash test1

-----------------------------------------------------------------------------------------------------------------------------------------
[ubuntu的初始root密码设置]
	1，ubuntu安装过程没有设置root密码，仅设置了一个非root用户密码；
	2，登录安装过程设置了密码的用户，然后使用sudo passwd修改密码，要求先验证当前用户;重复正确输入新密码后提示更新成功
		$ sudo passwd
		[sudo] password for xxxx:
		Enter new UNIX password:
		Retype new UNIX password:
		passwd：password updated successfully
-------------------------------------------------------------------------------------------------------------------------------------------
[ubuntu ssh开放远程root登录]
	1，修改配置开启远程登录：
		# vi /etc/ssh/sshd_config
		注释掉一行配置： #PermitRootLogin without-password
		添加一行配置：PermitRootLogin yes

	2，重启ssh服务
		# service ssh restart
-----------------------------------------------------------------------------------------------------------------------------------------------
[ubuntu下设置开机启动自定义服务]
	(貌似只能以root用户启动，对于这种特定用户运行，有问题，无法自启动成功；对于安装时使用了HOME加密，这种方法无效)
	建立自启动，启动顺序为98，运行级别2、3、4、5，服务名mysql：
	$ sudo update-rc.d mysql start 98 2 3 4 5 .
	update-rc.d: warning:  stop runlevel arguments (none) do not match mysql Default-Stop values (0 1 6)
	 Adding system startup for /etc/init.d/mysql ...
	   /etc/rc2.d/S98mysql -> ../init.d/mysql
	   /etc/rc3.d/S98mysql -> ../init.d/mysql
	   /etc/rc4.d/S98mysql -> ../init.d/mysql
	   /etc/rc5.d/S98mysql -> ../init.d/mysql

	删除该自启动：
	$ sudo update-rc.d -f mysql remove

[在/etc/rc.local中设置开机启动脚本]	-----------------[OK]
	/etc/rc.local中的命令是系统启动最后执行的动作，其中在"exit 0"前面的脚本内容如下(切换用户并执行)
		su - merrick <<EOF
		service mysql start;		
		pwd;
		service tomcat start;
		id;
		exit;
	或者，仅执行一条命令时：
		su - merrick -c "service mysql start"

----------------------------------------------------------------------------------------------------------------
[vim操作快捷键]		
	单文件正文搜索，： /xxx
	单文件全文搜索替换，提示是否替换：    :%s/oldstring/newstring/gc
	撤销上一次编辑： ctrl + u


----------------------------------------------------------------------------------------------------------------------
[使用openssl加密和解密tar包]
	加密：	
	$ tar -czf - ./test1/ | openssl enc -e -aes256 -out secured1.tar.gz
	enter aes-256-cbc encryption password:
	Verifying - enter aes-256-cbc encryption password:
	[命令解释]
	enc : 用openssl命令使用加密进行编码；
	e： 用于加密输入文件的enc命令的选项，这里指前一个tar命令的输出；
	aes256：加密的算法
	out：指定输出的文件名；


	解密
	$ openssl enc -d -aes256 -in secured1.tar.gz | tar xz -C ./
	enter aes-256-cbc decryption password:
	[命令解释]
	d：用于解密文件；

	详细可参考：$ man openssl
----------------------------------------------------------------------------------------------------------------























